{"ast":null,"code":"var _jsxFileName = \"/Users/katerina/Desktop/Olga/src/components/button/Button.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { font } from '../../styles/Common';\nimport { theme } from '../../styles/Theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = props => {\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    style: {\n      maxWidth: props.width || '350px',\n      height: props.height || '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n      children: props.arrow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nconst StyledButton = styled.button.withConfig({\n  displayName: \"Button__StyledButton\"\n})([\"width:100%;background-color:transparent;padding:5px 10px;margin-top:30%;cursor:pointer;border:1px solid;position:relative;display:flex;justify-content:space-between;align-items:center;&:hover{background-color:\", \";border-color:\", \";}&:hover \", \"{background-color:\", \";border-color:\", \";}\"], theme.colors.colorGray, theme.colors.colorGray, Title, theme.colors.colorGray, theme.colors.colorGray);\n_c2 = StyledButton;\nconst Title = styled.span.withConfig({\n  displayName: \"Button__Title\"\n})([\"text-transform:uppercase;\", \";\"], font({\n  family: '\"Montserrat\", sans-serif',\n  weight: 600,\n  Fmax: 13,\n  Fmin: 10,\n  color: `${theme.colors.fontColor}`\n}));\n_c3 = Title;\nconst Arrow = styled.span.withConfig({\n  displayName: \"Button__Arrow\"\n})([\"position:absolute;right:10px;top:-7px;\", \";\"], font({\n  weight: 300,\n  Fmax: 40,\n  Fmin: 30,\n  color: `${theme.colors.fontColor}`\n}));\n_c4 = Arrow;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StyledButton\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Arrow\");","map":{"version":3,"names":["React","styled","font","theme","jsxDEV","_jsxDEV","Button","props","StyledButton","style","maxWidth","width","height","children","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Arrow","arrow","_c","button","withConfig","displayName","colors","colorGray","_c2","span","family","weight","Fmax","Fmin","color","fontColor","_c3","_c4","$RefreshReg$"],"sources":["/Users/katerina/Desktop/Olga/src/components/button/Button.tsx"],"sourcesContent":["import React from 'react';\nimport {FlexWrapper} from '../FlexWrapper';\nimport styled from 'styled-components';\nimport {font} from '../../styles/Common';\nimport {theme} from '../../styles/Theme';\n\ntype ButtonPropsType = {\n    width?: string\n    height?: string\n    title: string\n    arrow?: string\n}\n\nexport const Button = (props: ButtonPropsType) => {\n    return (\n        <StyledButton style={{maxWidth: props.width || '350px', height: props.height || '40px'}}>\n                <Title>{props.title}</Title>\n                <Arrow>{props.arrow}</Arrow>\n        </StyledButton>\n    );\n};\n\nconst StyledButton = styled.button`\n    width: 100%;\n    background-color: transparent;\n    padding: 5px 10px;\n    margin-top: 30%;\n    cursor: pointer;\n    border: 1px solid;\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    &:hover{\n    background-color:${theme.colors.colorGray} ;\n    border-color: ${theme.colors.colorGray};\n    }\n    &:hover ${Title}{\n        background-color:${theme.colors.colorGray} ;\n        border-color: ${theme.colors.colorGray};\n    }\n`;\nconst Title = styled.span`\n    text-transform: uppercase;\n    ${font({family:'\"Montserrat\", sans-serif', weight: 600, Fmax: 13, Fmin: 10, color: `${theme.colors.fontColor}`})};\n    \n`;\nconst Arrow = styled.span`\n    position: absolute;\n    right: 10px;\n    top:-7px;\n    ${font({ weight: 300, Fmax: 40, Fmin: 30, color: `${theme.colors.fontColor}`})};\n    \n`;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAAQC,IAAI,QAAO,qBAAqB;AACxC,SAAQC,KAAK,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzC,OAAO,MAAMC,MAAM,GAAIC,KAAsB,IAAK;EAC9C,oBACIF,OAAA,CAACG,YAAY;IAACC,KAAK,EAAE;MAACC,QAAQ,EAAEH,KAAK,CAACI,KAAK,IAAI,OAAO;MAAEC,MAAM,EAAEL,KAAK,CAACK,MAAM,IAAI;IAAM,CAAE;IAAAC,QAAA,gBAChFR,OAAA,CAACS,KAAK;MAAAD,QAAA,EAAEN,KAAK,CAACQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC5Bd,OAAA,CAACe,KAAK;MAAAP,QAAA,EAAEN,KAAK,CAACc;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEvB,CAAC;AAACG,EAAA,GAPWhB,MAAM;AASnB,MAAME,YAAY,GAAGP,MAAM,CAACsB,MAAM,CAAAC,UAAA;EAAAC,WAAA;AAAA,wSAYXtB,KAAK,CAACuB,MAAM,CAACC,SAAS,EACzBxB,KAAK,CAACuB,MAAM,CAACC,SAAS,EAE5Bb,KAAK,EACQX,KAAK,CAACuB,MAAM,CAACC,SAAS,EACzBxB,KAAK,CAACuB,MAAM,CAACC,SAAS,CAE7C;AAACC,GAAA,GAnBIpB,YAAY;AAoBlB,MAAMM,KAAK,GAAGb,MAAM,CAAC4B,IAAI,CAAAL,UAAA;EAAAC,WAAA;AAAA,uCAEnBvB,IAAI,CAAC;EAAC4B,MAAM,EAAC,0BAA0B;EAAEC,MAAM,EAAE,GAAG;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,KAAK,EAAG,GAAE/B,KAAK,CAACuB,MAAM,CAACS,SAAU;AAAC,CAAC,CAAC,CAEnH;AAACC,GAAA,GAJItB,KAAK;AAKX,MAAMM,KAAK,GAAGnB,MAAM,CAAC4B,IAAI,CAAAL,UAAA;EAAAC,WAAA;AAAA,oDAInBvB,IAAI,CAAC;EAAE6B,MAAM,EAAE,GAAG;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,KAAK,EAAG,GAAE/B,KAAK,CAACuB,MAAM,CAACS,SAAU;AAAC,CAAC,CAAC,CAEjF;AAACE,GAAA,GANIjB,KAAK;AAAA,IAAAE,EAAA,EAAAM,GAAA,EAAAQ,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}